if game.PlaceId == 3769248453 then
end

--// Credits \\--
--[[ allah - Original Script ]]--

--// Exploit Check \\--
if #{firesignal, fireproximityprompt} ~= 2 then
    while true do
    end
end

--// Non-Synapse Users \\--
if not pcall(function() return syn.protect_gui end) then
    syn = {}
    syn.protect_gui = function(A_1)
        A_1.Parent = game:GetService("CoreGui")
    end
end

--// Globals \\--
IgnorePlayers = false

--// Services \\--
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

--// Player Variables \\--
local Player = Players.LocalPlayer
local Energy = Player:WaitForChild("attributes"):WaitForChild("Energy")
local Character = Player.Character or Player.CharacterAdded:wait()

--// Character Variables \\--
local PrimaryPart = Character:WaitForChild("HumanoidRootPart")
local Making = Character:WaitForChild("Making")
local Washing = Character:WaitForChild("Washing")
Player.CharacterAdded:Connect(function(Char)
    Making = Char:WaitForChild("Making")
    Washing = Char:WaitForChild("Washing")
    PrimaryPart = Char:WaitForChild("PrimaryPart")
end)

-- Variables
local sushis = require(ReplicatedStorage:WaitForChild("Sushiss"))
local gam = Workspace:WaitForChild("Game")
local stock = ReplicatedStorage:WaitForChild("Settings"):WaitForChild("Stock")
local shop = {
    Vegetable = "Vege",
    PremFish = "Prem",
    SoyaSauce = "Soya",
    Coffee = "Coff",
}

-- UI Library
local library = loadstring(game:HttpGetAsync('https://pastebin.com/raw/edJT9EGX'))()
local window = library:CreateWindow("sushi shop moment")
window:AddLabel({
    text = "Made by allah"
})
window:AddLabel({
    text = "Updated by allah"
})
window:AddToggle({
    text = "Enabled",
    flag = "enabled"
})
window:AddToggle({
    text = "Ignore Players",
    flag = "ignore"
})
library:Init()

-- NoClip
RunService.RenderStepped:Connect(function()
    if library.flags.Enabled then
        pcall(function()
            Player.Character.Humanoid:ChangeState(11)
        end)
    end
end)

-- FireClickDetector
function fire(Part, Check)
    for _, A_1 in pairs(Part:GetDescendants()) do
        if A_1:IsA("ProximityPrompt") and A_1.MaxActivationDistance ~= 0 then
            return Check or fireproximityprompt(A_1)
        end
    end
end

-- Teleport
function tp(Part)
    -- Check if already close
    if (Part.Position - PrimaryPart.Position).magnitude < 5 then
        return
    end
    -- Teleport
    PrimaryPart.CFrame = Part.CFrame
end

-- Amount Checker
function amount(p)
    for i,v in pairs(p:GetDescendants()) do
        if v:IsA("TextLabel") then
            return tonumber(v.Text:match("%d+"))
        end
    end
end

-- Being Used Check
function using(station)
    -- Nearby Players
    local plrs = Players:GetPlayers()
    for i = 2, #plrs do local v = plrs[i]
        if v:DistanceFromCharacter(station.StandHere.Position) < 2 and library.flags.ignore == false then
            return true
        end
    end
    -- In-Use
    return station.Using.Value ~= nil
end

-- Restock
function restock(name)
    -- Get Cost
    local cost = stock[name].Price.Value * 10
    -- Correct Name
    local name = shop[name] or name
    -- Use own wallet
    Player.Character.PayWallet.Value = Player.attributes.Sales.Value < cost
    -- Restock
    firesignal(Player.PlayerGui.BuyStock[name].Buy.MouseButton1Click)
end

-- Get Cooking Stations
local sushi = (function()
    local femboy = {}
    for i,v in pairs(gam:GetChildren()) do
        if v:FindFirstChild("Using") and not v:FindFirstChild("Water") and v.PrimaryPart.Transparency ~= 1 then
            table.insert(femboy,v)
        end
    end
    return femboy
end)()

-- Get Dishing Stations
local dish = (function()
    local femboy = {}
    for i,v in pairs(gam:GetChildren()) do
        if v:FindFirstChild("Using") and v:FindFirstChild("Water") and v.PrimaryPart.Transparency ~= 1 then
            table.insert(femboy,v)
        end
    end
    return femboy
end)()

-- Get Coffee Machine
local coffee = (function()
    for i,v in pairs(gam:GetChildren()) do
        if tonumber(v.Name) and v:FindFirstChild("Coffee", true) and v.PrimaryPart and v.PrimaryPart.Transparency ~= 1 then
            return v
        end
    end
end)()

-- AutoFarm Functions
local functions = {
    -- Energy Check
    energy = function()
        -- Check
        if Energy.Value < 10 then
            -- Check & Restock Coffee
            if stock.Coffee.Value == 0 then
                restock("Coffee")
                wait(.5)
            else
                -- C O N S U M E
                repeat
                    tp(coffee.PrimaryPart)
                    wait()
                    fireproximityprompt(coffee:FindFirstChild("ProximityPrompt", true))
                until stock.Coffee.Value == 0 or Player.Character:FindFirstChildOfClass("Tool") or not library.flags.enabled
                -- W A I T
                repeat RunService.RenderStepped:wait() until not Player.Character:FindFirstChildOfClass("Tool") or not library.flags.enabled
            end
        end
    end,
    -- Cooking
    cooking = function()
        -- Count Sushi On Track
        local count = 0
        local cum = workspace:GetChildren()
        for i = 1, #cum do local v = cum[i]
            if v:FindFirstChild("Madeby") and v:FindFirstChild("XP") then
                count = count + 1
            end
        end
        -- Check if more food is needed
        if amount(workspace.Counter) < count then
            return
        end
        -- Check Stock
        local recipe = ReplicatedStorage.Sushi[sushis(Player.attributes.Recipe.Value)]
        for i,v in pairs(recipe:GetChildren()) do
            if stock:FindFirstChild(v.Name) and stock[v.Name].Value < v.Value then
                restock(v.Name)
                return
            end
        end
        -- Actual Cooking
        for i,v in pairs(sushi) do
            -- Check For Empty Base
            if Energy.Value >= 10 and not using(v) and Player.attributes.Lv.Value >= v.Level.Value and fire(v,true) then
                -- TP & Cook
                repeat
                    tp(v.StandHere)
                    wait()
                    fire(v)
                until Making.Value ~= 0 or using(v) or not library.flags.enabled
                -- Finish
                repeat RunService.RenderStepped:wait() until Making.Value == 0 or not library.flags.enabled
                return
            end
        end
    end,
    -- Washing
    washing = function()
        for i,v in pairs(dish) do
            -- Check
            if Energy.Value >= 10 and stock.PlatesDirty.Value > 0 and not using(v) and fire(v, true) then
                -- TP & Dish
                repeat
                    tp(v.StandHere)
                    wait()
                    fire(v)
                until Washing.Value ~= 0 or stock.PlatesDirty.Value <= 0 or using(v) or not library.flags.enabled
                -- Finish
                repeat RunService.RenderStepped:wait() until Washing.Value == 0 or not library.flags.enabled
                return
            end
        end
    end,
}

-- AutoFarm!
while true do
    for i,v in pairs(functions) do
        if library.flags.enabled then
            v()
        end
    end
    wait()
end





--// Credits \\--
--[[ allah - hookfunction(s) ]]--
--[[ allah - Creator of this script ]]--

if game.PlaceId == 6447798030 then
end

--// Service \\--
local ReplicatedStorage = game:GetService("ReplicatedStorage")

--// Variables \\--
local Selected = "allahsexer.lua"

--// Exploit Check \\--
if #{getrawmetatable, hookfunction, getnamecallmethod} ~= 3 then
    while true do
    end
end

--// Exploit Fix \\--
if not pcall(function() return syn.protect_gui end) then
    syn = {}
    syn.protect_gui = function(A_1)
        A_1.Parent = game:GetService("CoreGui")
    end
end

--// UI Library \\--
local Library = loadstring(game:HttpGetAsync('https://pastebin.com/raw/edJT9EGX'))()
local Window = Library:CreateWindow("Funky Friday")
local Toggle_1 = Window:AddToggle({
    text = 'Block Opponents Song',
    flag = 'Blocking'
})
Library:Init()

--// IsLoaded \\--
local OLD_1;
OLD_1 = hookfunction(getrawmetatable(game).__index, function(A_1, A_2)
    if A_2 == "IsLoaded" and Library.flags.Blocking and tostring(A_1) ~= Selected then
        return false
    end
    return OLD_1(A_1, A_2)
end)

--// Preload & InvokeServer \\--
local OLD_2;
OLD_2 = hookfunction(getrawmetatable(game).__namecall, function(...)
    local Method = getnamecallmethod()
    local Args = {...}
    if Method == "PreloadAsync" and Library.flags.Blocking and tostring(Args[2][1]) ~= Selected then
        return wait(30)
    elseif Method == "InvokeServer" and type(Args[2]) == "table" and Args[2][2] == "SelectSong" then
        Selected = Args[3][1]
    end
    return OLD_2(...)
end)


if game.PlaceId == 6872265039 then
end

--// Credits \\--
--[[ allah - solo scripter ong ]]--

--// Settings \\--
FOV = 250

--// Service \\--
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

--// Variables \\--
local Camera = Workspace.CurrentCamera
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local Net = ReplicatedStorage:WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged")

--// Prevent Normal Shooting \\--
local old;
old = hookfunction(getrawmetatable(game).__namecall,function(...)
    local args = {...}
    if getnamecallmethod() == "InvokeServer" and not checkcaller() and (args[1].Name == "ProjectileHit" or args[1].Name == "ProjectileFire") and tostring(args[2]) ~= "telepearl" then
        return
    end
    return old(...)
end)

--// Get Closest Enemy \\--
function GetClosestPlayer()
    local Closest = false
    local Distance = FOV
    local MousePos = Vector2.new(Mouse.X, Mouse.Y)
    for _, A_1 in next, Players:GetPlayers() do
        if A_1.Team ~= Player.Team and A_1.Character and A_1.Character.PrimaryPart and A_1.Character:FindFirstChild("Humanoid") and A_1.Character.Humanoid.Health > 0 then
            local vector, onScreen = Camera:WorldToScreenPoint(A_1.Character.PrimaryPart.Position)
            if onScreen then
                local NewDistance = (MousePos - Vector2.new(vector.X, vector.Y)).Magnitude
                if NewDistance < Distance then
                    Distance = NewDistance
                    Closest = A_1.Character.PrimaryPart
                end
            end
        end
    end
    warn(Distance)
    return Closest
end

--// Mouse Connector \\--
local Debounce = false
Mouse.Button1Down:Connect(function()
    --// Debounce Check \\--
    if Debounce then
        return
    else
        Debounce = true
    end

    --// Get Closest Enemy \\--
    local Target = GetClosestPlayer()
    if not Target then
        Debounce = false
        return
    end

    --// Get Correct Inventory \\--
    local Inventory = false
    for _, A_1 in next, ReplicatedStorage:WaitForChild("Inventories"):GetChildren() do
        if A_1.Name == Player.Name and (A_1:FindFirstChild("wood_bow") or A_1:FindFirstChild("wood_crossbow")) then
            Inventory = A_1
            break
        end
    end
    if not Inventory then
        Debounce = false
        return
    end

    --// Type \\--
    local Bow = Inventory:FindFirstChild("wood_bow") or Inventory:FindFirstChild("wood_crossbow")

    --// Shoot Attempt \\--
    local Arrow = Net:WaitForChild("ProjectileFire"):InvokeServer(Bow)

    --// Hit Attempt \\--
    if typeof(Arrow) == "Instance" then
        --local CFrame = Player.Character
        local Content = {
            part = Target,
            velocity = Vector3.new(),
            hitCFrame = Target.CFrame + Vector3.new(0, 1, 0),
            velocityMultiplier = 1
        }
        Net:WaitForChild("ProjectileHit"):InvokeServer(Bow.Name == "wood_bow" and "arrow" or "crossbow_arrow", Arrow, Content)
    end

    -- Debounce
    Debounce = false
end)


if game.PlaceId == 7739897561 then
end

--// Exploit Fix \\--
if not pcall(function() return syn.protect_gui end) then
    syn = {}
    syn.protect_gui = function(A_1)
        A_1.Parent = game:GetService("CoreGui")
    end
end

--// Services \\--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

--// Variable \\--
local Player = Players.LocalPlayer
local Ignore = {}

--// ESP Library by Kiriot22 \\--
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false
ESP.Boxes = false

--// UI Library \\--
local Library = loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/Just-Egg-Salad/roblox-scripts/main/uwuware'))()
local Window = Library:CreateWindow("Impossible squid")
Window:AddButton({
    text = "Clear",
    callback = function()
        for _, A_1 in next, ESP.Objects do
            A_1:Remove()
        end
    end
})
Library:Init()

--// Set Tile \\--
function Detect(Root, C)
    -- Parameters
    local Params = RaycastParams.new()
    Params.FilterDescendantsInstances = Ignore
    Params.FilterType = Enum.RaycastFilterType.Blacklist
    -- RayCast
    local Hit = Workspace:Raycast(Root.Position, Vector3.new(0, -6, 0), Params)
    if Hit and Hit.Instance:FindFirstChildOfClass("TouchTransmitter") then
        print(Hit.Instance)
        ESP:Add(Hit.Instance, {
            Name = "Ezpi",
            PrimaryPart = Hit.Instance,
            Color = C,
            IsEnabled = function(A_1)
                return Player:DistanceFromCharacter(A_1.PrimaryPart.Position) <= 125
            end
        })
    end
end

--// Humanoid Detect Stuff \\--
function OnDeath(Char)
    -- Variables
    local Humanoid = Char:WaitForChild("Humanoid")
    while not Char.PrimaryPart do
        task.wait()
    end
    local Root = Char.PrimaryPart
    -- Store
    table.insert(Ignore, Char)
    -- Detect Changes
    Humanoid.StateChanged:Connect(function(Old, New)
        if Char == Player.Character then
            print(Old, New)
        end
        if Old == Enum.HumanoidStateType.Freefall and New == Enum.HumanoidStateType.Landed or New == Enum.HumanoidStateType.Jumping then
            Detect(Root, Color3.new(0, 1, 0))
        elseif New == Enum.HumanoidStateType.Dead then
            Detect(Root, Color3.new(1, 0, 0))
        end
    end)
end

--// Detect Player Death \\--
for _, A_1 in next, Players:GetPlayers() do
    if A_1.Character then
        task.spawn(function()
            OnDeath(A_1.Character)
        end)
    end
    A_1.CharacterAdded:Connect(OnDeath)
    A_1.CharacterRemoving:Connect(function(Char)
        local Index = table.find(Ignore, Char)
        if Index then
            table.remove(Ignore, Index)
        end
    end)
end
Players.PlayerAdded:Connect(function(Plr)
    if Plr.Character then
        task.spawn(function()
            OnDeath(Plr.Character)
        end)
    end
    Plr.CharacterAdded:Connect(OnDeath)
    Plr.CharacterRemoving:Connect(function(Char)
        local Index = table.find(Ignore, Char)
        if Index then
            table.remove(Ignore, Index)
        end
    end)
end)

--// Ignore Fake Parts \\--
function FakePart(Part)
    if Part:IsA("TouchTransmitter") and Part.Parent.Transparency >= 0.9 then
        table.insert(Ignore, Part.Parent)
    end
end

--// Detect Parts \\--
Workspace.DescendantAdded:Connect(FakePart)
for _, A_1 in next, Workspace:GetDescendants() do
    FakePart(A_1)
end

if game.PlaceId == 7860844204 then
end

--// Exploit Check \\--
if #{firetouchinterest, fireproximityprompt, hookmetamethod, setupvalue, getgc} ~= 5 then
    while true do
    end
end

--// Exploit Fix \\--
if not pcall(function() return syn.protect_gui end) then
    syn = {}
    syn.protect_gui = function(A_1)
        A_1.Parent = game:GetService("CoreGui")
    end
end

--// Services \\--
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local MarketplaceService = game:GetService("MarketplaceService")
local GroupService = game:GetService("GroupService") 
local RunService = game:GetService("RunService")

--// Variables \\--
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local Camera = Workspace.CurrentCamera
local Rocks = Workspace:WaitForChild("MiningRocks")
local Robbable = Workspace:WaitForChild("Robbable")
local TP_Part = Workspace:WaitForChild("SecurityStuffIDK"):WaitForChild("TeleBackPart")
local LootSpawns = Workspace:WaitForChild("LootSpawns")
local PlayerStats = ReplicatedStorage:WaitForChild("PlayerStats")
local Local_PlayerStats = PlayerStats:WaitForChild(Player.Name)

--// Anti-Mod \\--
local PlaceInfo = MarketplaceService:GetProductInfo(game.PlaceId)
local Group_ID = PlaceInfo.Creator.CreatorTargetId
local Roles = GroupService:GetGroupInfoAsync(Group_ID).Roles
local Ranks = {}
Ranks.Guest = 0
for Name, Rank in next, Roles do
    Ranks[Name] = Rank
end
function ModCheck(A_1)
    local Rank = Ranks[A_1:GetRoleInGroup(Group_ID)]
    if Rank and Rank > 2 then 
        Player:Kick("Mod " .. A_1.Name .. " joined your game.")
    end
end

--// Get Functions \\--
local AddStamina;
local RegWalkStuff;
function UpdateFuncs()
    local Scr = Player:FindFirstChild("CombatMain", true)
    if Scr then
        for _, A_1 in next, getgc() do
            if type(A_1) == "function" and getfenv(A_1).script == Scr then
                local Name = getinfo(A_1).name
                if Name == "AddStamina" then
                    AddStamina = A_1
                elseif Name == "RegWalkStuff" then
                    RegWalkStuff = A_1
                end
            end
        end
    end
end

--// TP Bypass \\--
local OldIndex = nil
OldIndex = hookmetamethod(game, "__index", function(Self, Key)
    if not checkcaller() and tostring(Self) == "TeleportPass" and Key == "Value" then
        return true
    end
    return OldIndex(Self, Key)
end)

--// Libraries \\--
local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
ESP:Toggle(true)
ESP.Players = false
ESP.AutoRemove = false
ESP.Rob = false
local Library = loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/Just-Egg-Salad/roblox-scripts/main/uwuware'))()
local Window = Library:CreateWindow("Life sentence")
Window:AddLabel({
    text = "discord.gg/XdeXyxq8z2"
})

--// ESP Color \\--
ESP.Overrides.GetColor = function(A_1)
    local A_2 = ESP:GetPlrFromChar(A_1)
    if A_2 then
        local A_3 = PlayerStats:FindFirstChild(A_2.Name)
        local A_4 = A_2:FindFirstChild("Bounty", true)
        if A_3 and A_3:FindFirstChild("Cop") and A_3.Cop.Value == true then
            return Color3.new(0.2, 0.2, 1)
        elseif A_4 and A_4.Value > 0 then
            return Color3.new(1, 0.2, 0.2)
        end
    end
    return Color3.new(1, 1, 1)
end

--// Get Target \\--
function GetTarget()
    -- Variables
    local Distance = Library.flags.Range + 0.1
    local Closest = false
    local Cop = Local_PlayerStats.Cop.Value
    -- Go Through Players
    for _, A_1 in next, Players:GetPlayers() do
        local Char = A_1.Character
        -- Player Check
        if Char and A_1 ~= Player and Char:FindFirstChild("Head") and Char:FindFirstChild("Humanoid") and Char.Humanoid.Health > 0 and not Char:FindFirstChild("ForceField") then
            -- Team Check
            local Data = PlayerStats:FindFirstChild(A_1.Name)
            if Data and Data:FindFirstChild("Cop") and (Cop == false or Data.Cop.Value == false) then
                -- Distance Check
                local New_Distance = Player:DistanceFromCharacter(Char.Head.Position)
                if New_Distance < Distance then
                    Distance = New_Distance
                    Closest = Char.Head
                end
            end
        end
    end
    return Closest
end

--// Get SilentAim Target \\--
function SilentAimTarget()
    local Closest = false
    local Distance = 400
    local MousePos = Vector2.new(Mouse.X, Mouse.Y)
    for _, A_1 in next, Players.GetPlayers(Players) do
        local Char = A_1.Character
        local Hum = Char and Char.FindFirstChild(Char, "Humanoid")
        if A_1 ~= Player and Hum and Hum.Health > 0 and Char.FindFirstChild(Char, "Head") and not Char.FindFirstChild(Char, "ForceField") then
            local vector, onScreen = Camera.WorldToScreenPoint(Camera, Char.Head.Position)
            if onScreen then
                local NewDistance = (MousePos - Vector2.new(vector.X, vector.Y)).Magnitude
                if NewDistance < Distance then
                    Distance = NewDistance
                    Closest = Char.Head
                end
            end
        end
    end
    return Closest
end

--// Touch Func \\--
function Touch(A_1, A_2)
    pcall(function()
        firetouchinterest(A_1, A_2, 0)
        firetouchinterest(A_1, A_2, 1)
    end)
end

--// UI Library \\--
Window:AddToggle({
    text = "Attack-Aura",
    flag = "Attack",
    callback = function()
        while Library.flags.Attack == true and wait() do
            local Target = GetTarget()
            local Tool = Player.Character and Player.Character:FindFirstChildOfClass("Tool")
            if Target and Tool and Tool:FindFirstChild("Damage") and Tool.Damage.Value > 0 then
                Tool:Activate()
                Touch(Tool.Handle, Target)
            end
        end
    end
})
Window:AddToggle({
    text = "SilentAim"
})
Window:AddToggle({
    text = "Auto-Arrest",
    flag = "Arrest",
    callback = function()
        while Library.flags.Arrest == true and wait() do
            if Player.Character and Player.Character:FindFirstChild("Handcuffs") then
                for _, A_1 in next, Players:GetPlayers() do
                    local Char = A_1.Character
                    if Char and A_1 ~= Player and A_1:FindFirstChild("leaderstats") and A_1.leaderstats:FindFirstChild("Bounty") and A_1.leaderstats.Bounty.Value > 0 then
                        local Prox = Char:FindFirstChild("ArrestPrompt", true)
                        if Prox and Player:DistanceFromCharacter(Prox.Parent.Position) < Prox.MaxActivationDistance then
                            fireproximityprompt(Prox)
                        end
                    end
                end
            end
        end
    end
})
Window:AddToggle({
    text = "Collect Dropped Cash",
    flag = "Cash",
    callback = function()
        while Library.flags.Cash == true and wait() do
            for _, A_1 in next, Workspace:GetChildren() do
                local Prompt = A_1:FindFirstChildOfClass("ProximityPrompt")
                if Prompt and A_1.Name == "DroppedCash" and Player:DistanceFromCharacter(A_1.Position) < Prompt.MaxActivationDistance then
                    fireproximityprompt(Prompt)
                end
            end
        end
    end
})
Window:AddSlider({
    text = "Attack-Range",
    flag = "Range",
    min = 2,
    max = 18,
    float = 0.25
})
local ESP_Folder = Window:AddFolder("ESP Settings")
ESP_Folder:AddToggle({
    text = "Players",
    callback = function(A_1)
        ESP.Players = A_1
    end
})
ESP_Folder:AddToggle({
    text = "Robbable",
    flag = "Rob"
})
ESP_Folder:AddToggle({
    text = "Items/Scrap",
    flag = "Scrap"
})
local Misc = Window:AddFolder("Misc")
Misc:AddToggle({
    text = "Auto-Dumbell",
    flag = "Dumbell"
})
Misc:AddToggle({
    text = "Inf. Energy",
    flag = "Energy",
    callback = function(A_1)
        -- Check
        local Amount = math.huge
        if A_1 == false then
            Amount = 100
        end
        -- Set
        setupvalue(AddStamina, 1, Amount)
    end
})
Misc:AddToggle({
    text = "Inf. Consumable",
    flag = "Consume"
})
Misc:AddToggle({
    text = "Anti-Mod",
    flag = "Mod",
    callbcak = function(A_1)
        -- Check
        if A_1 == false then
            return
        end
        -- Mod Check
        for _, A_1 in next, Players:GetPlayers() do
            ModCheck(A_1)
        end
    end
})
Misc:AddBind({
    text = "Teleport Forwards",
    callback = function()
        Player.Character.HumanoidRootPart.CFrame *= CFrame.new(0, 0, -5)
    end
})
local Teleports = Window:AddFolder("Teleports")
for _, A_1 in next, Workspace:WaitForChild("Buttons"):GetChildren() do
    local Name = A_1:FindFirstChild("ToolName")
    local Button = A_1:FindFirstChild("Button")
    if Name and Button then
        Teleports:AddButton({
            text = Name.Value,
            callback = function()
                -- Check
                local Primary = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") or false
                if Primary == false then
                    return
                end
                -- Teleport
                Primary.CFrame = CFrame.new(Button.Position) + Vector3.new(0, 3, 0)
            end
        })
    end
end
Library:Init()

--// Rob ESP \\--
for _, A_1 in next, Robbable:GetChildren() do
    local Prompt = A_1:FindFirstChildWhichIsA("ProximityPrompt", true)
    ESP:Add(A_1, {
        Name = A_1.Name,
        PrimaryPart = A_1.PrimaryPart or A_1:FindFirstChild("HumanoidRootPart"),
        IsEnabled = function()
            return Prompt.Enabled == true and Library.flags.Rob == true
        end,
        Color = Color3.fromRGB(66, 233, 255)
    })
end

--// Item ESP \\--
local Scrap = {"Gear", "Blade", "Spring"}
for _, A_1 in next, LootSpawns:GetChildren() do
    local Prompt = A_1:WaitForChild("Part"):WaitForChild("Attachment"):WaitForChild("ProximityPrompt")
    ESP:Add(A_1, {
        Name = "Item/Scrap",
        PrimaryPart = A_1.PrimaryPart or A_1:FindFirstChild("Part"),
        IsEnabled = function(A_2)
            if Prompt.Enabled == true and Library.flags.Scrap == true then
                -- Get Item Name
                local New_Name = "Item/Scrap"
                for _, A_3 in next, Scrap do
                    if A_1[A_3].Transparency == 0 then
                        New_Name = A_3
                    end
                end
                ESP:GetBox(A_1).Name = New_Name
                return true
            end
            return false
        end,
        Color = Color3.new(0.3, 1, 0.3)
    })
end

--// Anti-Mod \\--
Players.PlayerAdded:Connect(function(A_1)
    if Library.flags.Mod == true then
        ModCheck(A_1)
    end
end)

--// SilentAim Namecall \\--
local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__namecall", function(Self, ...)
    local Args = {...}
    local NamecallMethod = getnamecallmethod()
    if NamecallMethod == "FireServer" and Args[1] == "Fire" and Library.flags.SilentAim and typeof(Args[2]) == "table" and typeof(Args[2][2]) == "Instance" then
        local Target = SilentAimTarget()
        if Target ~= false then
            for _, A_1 in next, Args[2] do
                if typeof(A_1) == "Instance" then
                    Args[2][_] = Target
                end
            end
        end
    end
    return OldNameCall(Self, unpack(Args))
end)

--// Local character \\--
function LocalChar(Char)
    -- Inf Consumable & Auto-Dumbell
    Char.ChildAdded:Connect(function(A_1)
        if A_1.Name == "Dumbell" then
            while Library.flags.Dumbell and A_1.Parent == Char do
                A_1:Activate()
                A_1:Deactivate()
                wait()
            end       
        elseif Library.flags.Consume == true and A_1:IsA("Tool") then
            -- Make consumable infinite
            local Useless = A_1:FindFirstChild("ThrowAfterDone")
            if Useless and Useless.Value == true then
                wait()
                Useless:Destroy()
            end
            -- Wait for use or unequip
            while A_1.Parent == Char and Library.flags.Consume == true do
                wait(0.1)
            end
            -- Fix sprinting
            if Library.flags.Consume == true then
                wait(0.2)
                setupvalue(RegWalkStuff, 1, true)
            end
        end
    end)
    -- Get New Funcs
    local Old_AddStamina = AddStamina
    local Old_RegWalkStuff = RegWalkStuff
    while (Old_AddStamina == AddStamina or Old_RegWalkStuff == RegWalkStuff) and task.wait(1) do
        UpdateFuncs()
    end
    -- Infinite Energy
    if Library.flags.Energy == true then
        setupvalue(AddStamina, 1, math.huge)
    end
end
task.spawn(function()
    LocalChar(Player.Character)
end)
Player.CharacterAdded:Connect(LocalChar)
